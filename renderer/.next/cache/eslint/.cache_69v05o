[{"C:\\Code\\Project\\kasir\\renderer\\pages\\api\\hello.js":"1","C:\\Code\\Project\\kasir\\renderer\\pages\\index.js":"2","C:\\Code\\Project\\kasir\\renderer\\pages\\_app.js":"3","C:\\Code\\Project\\kasir\\renderer\\pages\\cashier.js":"4","C:\\Code\\Project\\kasir\\renderer\\components\\Cashier.jsx":"5","C:\\Code\\Project\\kasir\\renderer\\components\\base\\BaseLayout.jsx":"6","C:\\Code\\Project\\kasir\\renderer\\components\\base\\SideBar.jsx":"7","C:\\Code\\Project\\kasir\\renderer\\components\\base\\TransactionDay.jsx":"8","C:\\Code\\Project\\kasir\\renderer\\components\\main\\ApplicationInfo.jsx":"9","C:\\Code\\Project\\kasir\\renderer\\components\\main\\CashierConfirmation.jsx":"10"},{"size":170,"mtime":1636462038425,"results":"11","hashOfConfig":"12"},{"size":680,"mtime":1637024372562,"results":"13","hashOfConfig":"12"},{"size":2051,"mtime":1637032258179,"results":"14","hashOfConfig":"12"},{"size":109,"mtime":1636690131572,"results":"15","hashOfConfig":"12"},{"size":441,"mtime":1636689666101,"results":"16","hashOfConfig":"12"},{"size":1698,"mtime":1637029959782,"results":"17","hashOfConfig":"12"},{"size":1776,"mtime":1636866292148,"results":"18","hashOfConfig":"12"},{"size":648,"mtime":1636692420663,"results":"19","hashOfConfig":"12"},{"size":2948,"mtime":1637031796861,"results":"20","hashOfConfig":"12"},{"size":78,"mtime":1636863802657,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19qroen",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Code\\Project\\kasir\\renderer\\pages\\api\\hello.js",[],"C:\\Code\\Project\\kasir\\renderer\\pages\\index.js",[],"C:\\Code\\Project\\kasir\\renderer\\pages\\_app.js",[],"C:\\Code\\Project\\kasir\\renderer\\pages\\cashier.js",[],"C:\\Code\\Project\\kasir\\renderer\\components\\Cashier.jsx",[],"C:\\Code\\Project\\kasir\\renderer\\components\\base\\BaseLayout.jsx",[],"C:\\Code\\Project\\kasir\\renderer\\components\\base\\SideBar.jsx",[],"C:\\Code\\Project\\kasir\\renderer\\components\\base\\TransactionDay.jsx",[],"C:\\Code\\Project\\kasir\\renderer\\components\\main\\ApplicationInfo.jsx",["43"],"import { faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { ipcRenderer } from 'electron';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { show } from '../../scripts/reducers/toastSlice';\r\nimport styles from './ApplicationInfo.module.css';\r\n\r\nexport default function ApplicationInfo() {\r\n    const dispatch = useDispatch();\r\n    const wsMessage = useSelector((state) => state.app.wsMessage);\r\n    const ws = useSelector((state) => state.app.ws);\r\n    const [ isUpdateEvent, setUpdate ] = useState(false);\r\n    const checkForUpdates = () => {\r\n        if (!ws) {\r\n            console.log('ws');\r\n            return;\r\n        }\r\n        \r\n        ws.send(JSON.stringify({ action: 'check-update' }));\r\n    };\r\n    const downloadUpdate = () => {\r\n        if (!ws) {\r\n            console.log('ws');\r\n            return;\r\n        }\r\n        \r\n        ws.send(JSON.stringify({ action: 'download-update' }));\r\n    }\r\n    const installUpdate = () => {\r\n        if (!ws) {\r\n            console.log('ws');\r\n            return;\r\n        }\r\n        \r\n        ws.send(JSON.stringify({ action: 'install-update' }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!wsMessage) {\r\n            return;\r\n        }\r\n\r\n        switch (wsMessage.action) {\r\n            case 'update-available':\r\n                setUpdate('available');\r\n                break;\r\n            case 'update-downloaded':\r\n                setUpdate('downloaded');\r\n                break;\r\n        }\r\n    });\r\n    return (\r\n        <div className=\"mainAppFullSize\">\r\n            <div className={styles.updateContainer}>\r\n                <div className={styles.updateInfo}>\r\n                    <div className={styles.updateIcon}>\r\n                        <FontAwesomeIcon icon={faSync} />\r\n                    </div>\r\n                    <div className={styles.updateTitle}>\r\n                        <h2 style={{ margin: 0, padding: 0 }}>Update</h2>\r\n                        <div className={styles.updateProgress}>\r\n                            <div className={styles.updateProgressUI}>&nbsp;</div>\r\n                        </div>\r\n                        <span style={{ fontSize: '13px', color: 'grey' }}>Terakhir dicek: kemarin</span>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.updateAction}>\r\n                    <button className={styles.updateButton} onClick={checkForUpdates}>Cek Update</button>\r\n                </div>\r\n            </div>\r\n            { isUpdateEvent ? <div className={styles.updateReady}>\r\n                <h3>Update tersedia { isUpdateEvent === 'available' ? <button onClick={downloadUpdate}>update sekarang</button> : isUpdateEvent === 'downloaded' ? <button onClick={installUpdate}>install sekarang</button> : null }</h3>\r\n            </div> : null }\r\n        </div>\r\n    );\r\n}","C:\\Code\\Project\\kasir\\renderer\\components\\main\\CashierConfirmation.jsx",[],{"ruleId":"44","severity":1,"message":"45","line":39,"column":5,"nodeType":"46","endLine":39,"endColumn":14,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [wsMessage] as a second argument to the useEffect Hook.","Identifier",["48"],{"desc":"49","fix":"50"},"Add dependencies array: [wsMessage]",{"range":"51","text":"52"},[1601,1601],", [wsMessage]"]